swagger: '2.0'
info:
  title: SDC API
  description: |
    Cert-based Security Domain Controller implements [OAuth 2.0](https://tools.ietf.org/html/rfc6749  "Docs") via LIBRA library.
  version: "1.2.0-b"
#host: ec-oauth-sso.run.aws-usw02-dev.ice.predix.io
schemes:
  - https
basePath: /
produces:
  - application/json
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: application
    authorizationUrl: /oauth/authorize
    tokenUrl: /oauth/token
    description: OAuth 2.0 with Client Credentias Grant type
    scopes: []
    #  read: Grants read access
    #  write: Grants write access
    #  admin: Grants read and write access to administrative information
paths:
  /{rev}/scopes:
    post:
      summary: Create new scope
      description: |
        Create and register new scope with SDC instance.
      tags:
        - Scope
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string      
      security:
        - OAuth2: []
    get:
      summary: Get current scopes list
      description: |
        Get current scopes list which registered with SDC instance.
      tags:
        - Scope
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
      security:
        - OAuth2: []
    
  /{rev}/scopes/{scopeId}:
    put:
      summary: Update scope from SDC
      description: |
        Update scope detail by scope ID registered with the scope.
      tags:
        - Scope
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: scopeId
          description: |
            The scope id for the scope.
          required: true
          type: string
      security:
        - OAuth2: []
    delete:
      summary: Delete scope from SDC
      description: |
        Remove existing scope registered with SDC instance.    
      tags:
        - Scope
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: scopeId
          description: |
            The scope id for the scope.
          required: true
          type: string
      security:
        - OAuth2: []
    get:
      summary: Get scope detail from SDC
      description: |
        Get existing scope detail registered with SDC instance.    
      tags:
        - Scope
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: scopeId
          description: |
            The scope id for the scope.
          required: true
          type: string
      security:
        - OAuth2: []
  /{rev}/scopesIndex:
    post:
      summary: Create new scope-index
      description: |
        Create and register new scope index with SDC instance.
      tags:
        - OIDC-Scope Index
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
      security:
        - OAuth2: []
    get:
      summary: Get current scope-index list
      description: |
        Get current scope-index list which registered with SDC instance.
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
      tags:
        - OIDC-Scope Index
      security:
        - OAuth2: []
    
  /{rev}/scopesIndex/{scopeIdxId}:
    put:
      summary: Update scope-index in SDC
      description: |
        Update scope-index detail by scope-index ID registered with SDC instance.
      tags:
        - OIDC-Scope Index
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: scopeIdxId
          description: |
            The scope-index id for the scope-index.
          required: true
          type: string
      security:
        - OAuth2: []
    delete:
      summary: Delete scope-index in SDC
      description: |
        Remove existing scope-index registered with SDC instance.    
      tags:
        - OIDC-Scope Index
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: scopeIdxId
          description: |
            The scope-index id for the scope-index.
          required: true
          type: string
      security:
        - OAuth2: []
    get:
      summary: Get scope-index detail in SDC
      description: |
        Get existing scope-index detail registered with SDC instance.    
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: scopeIdxId
          description: |
            The scope-index id for the scope-index.
          required: true
          type: string
      tags:
        - OIDC-Scope Index
      security:
        - OAuth2: []
  /{rev}/seeds:
    get:
      summary: Get seeders list
      description: |
        Get seeders from the cluster. This request is only accessible to the owner of this instance.
      tags:
        - System
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The seeder list.
          required: true
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: The seeder list
          schema:
            type: "object"
  /{rev}/reboot:
    post:
      summary: Restart the SDC instance
      description: |
        Restart the SDC instance immediately.
      tags:
        - System
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: Reboot status
          schema:
            type: "object"
  /{rev}/user:
    get:
      summary: Get the current user
      description: |
        Get the current licensed user associated with the OAuth2 authentication.
      produces:
        - application/json
      tags:
        - User
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: The current user detail
          schema:
            type: "object"
    put:
      summary: Update the current user
      description: |
        Update the current authenticated user in the license.
      produces:
        - application/json
      tags:
        - User
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
      security:
        - OAuth2: []        
      responses:
        200:
          description: The updated user detail in the license.
          schema:
            type: "object"
  /{rev}/users:
    get:
      summary: Get list of OIDC users
      description: |
        Get list of authenticated OIDC users curently registered with the SDC instance
      produces:
        - application/json
      tags:
        - User
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: OIDC User list
          schema:
            type: "object"
    post:
      summary: Tag the owner's license with an OIDC user
      description: |
        tag an OIDC user to the owner's license
      tags:
        - User
      consumes:
        - multipart/form-data
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: formData
          name: vendor-user-id
          description: |
            A User ID generated by a OAuth2 Vendor, which is used to identify the OIDC user. The user must have been authenticated via SDC prior to this call.
          required: true
          type: file
      security:
        - OAuth2: []
      responses:
        200:
          description: License adder
          schema:
            type: "object" 
            
  /{rev}/trs/license-id/{licid}:
    get:
      summary: Get the list of transactions by licensed client id
      description: |
        Get the list of transactions associated with the licensed client/device id
      produces:
        - application/json
      tags:
        - Transaction
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: licid
          default: v1.2beta
          description: |
            The licensed client/device id.
          required: true
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: Transaction list
          schema:
            type: "object"
  /{rev}/trs/oidc-user-id/{oidcid}:
    get:
      summary: "Get the list of transactions associated with a oidc user id"
      description: |
        Get the list of transactions associated with an oidc vendor's user id"
      produces:
        - application/json
      tags:
        - Transaction
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: oidcid
          default: v1.2beta
          description: |
            The oidc user id.
          required: true
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: Transaction list
          schema:
            type: "object"
  /{rev}/trs:
    post:
      summary: Create a digital transaction
      description: |
        Create a digital transaction.
      tags:
        - Transaction
      consumes:
        - multipart/form-data
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: formData
          name: license-id
          description: |
            The SDC licensed/device Id which this transaction is made to.
          required: true
          type: string           
        - in: formData
          name: obj-id
          description: |
            The transactional object id (1=EC, 2=TC, 3=DIVE, 4=GlobalScape, 5=EKS-SMALL, 6=EKS-MEDIUM, 7=EKS_LARGE, 8=EKS_XL, 9=Tesla-Model-Y)
          required: true
          type: string
          enum: [1,2,3,4,5,6,7,8,9] 
        - in: formData
          name: currency-id
          description: |
            The currency id used for this transaction (1=USD, 2=INR, 3=YEN, 4=SDC)
          required: true
          type: string
          enum: [1,2,3,4]
        - in: formData
          name: ea-amount
          description: |
            The amount per each object (e.g. 150.00)
          required: true
          type: string
          format: currency
        - in: formData
          name: qty
          default: 1
          description: |
            The quantity of the object for this transaction (e.g. 1)
          required: true
          type: string
        - in: formData
          name: oidc-user-id
          description: |
            An OIDC User ID generated by a OAuth2 Vendor, which is used to identify an OIDC user. (e.g. 212355744)
          required: true
          type: string
        - in: formData
          name: payment-vad-str-1
          description: |
            A transactional variable for vendors' payment integration purpose. E.g. BUC ADN Str SAP@GE. Credit Card for Nurego payment.
          required: false
          type: string
        - in: formData
          name: payment-vad-str-2
          description: |
            A secondary transactional variable to payment-vad-str-1.
          required: false
          type: string
        - in: formData
          name: payment-vad-str-3
          description: |
            A backup variable to support payment-vad-str-1.
          required: false
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: the transaction detail
          schema:
            type: "object"
  /{rev}/trs/{trid}/add/oidcuser:
    post:
      summary: Add an OIDC User
      description: |
        Associate an OIDC User with the transaction.
      tags:
        - Transaction
      consumes:
        - multipart/form-data
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: trid
          default: v1.2beta
          description: |
            The transaction ID.
          required: true
          type: string
        - in: formData
          name: oidc-user-id
          description: |
            OIDC User ID to be associated with this transaction
          required: false
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: the transaction detail
          schema:
            type: "object"          
  /{rev}/licenses/{licenseId}:
    delete:
      summary: Remove a license from the SDC instance.
      description: |
        Remove runtime in-memory user detail
      tags:
        - Tenancy
      security:
        - OAuth2: []
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: path
          name: licenseId
          description: |
            The license id to be removed from the SDC instance
          required: true
          type: string
      responses:
        205:
          description: License removal
          schema:
            type: "object"  
  /{rev}/licenses:
    get:
      summary: Get list of registered licenses
      description: |
        Get a list of registered licenses currently w/ the SDC instance.
      produces:
        - application/json
      tags:
        - Tenancy
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: License list
          schema:
            type: "object"
    post:
      summary: Add x509 keypair
      description: |
        Add additional x509 keypair for validation purpose. Adding the keypair will 
        enable an app's access via "Client Credential" grand type.
      tags:
        - Tenancy
      consumes:
        - multipart/form-data
      parameters: 
        - in: path
          name: rev
          default: v1.2beta
          description: |
            The revision for this SDC instance.
          required: true
          type: string
        - in: formData
          name: privateKey
          description: |
            The private key of the x509 certificate.
          required: true
          type: file
        - in: formData
          name: publicCer
          description: |
            The signed x509 certificate.
          required: true
          type: file
        - in: formData
          name: memo
          description: |
            describe the keypair for reference only.
          required: true
          type: string
      security:
        - OAuth2: []
      responses:
        200:
          description: License adder
          schema:
            type: "object"        
  /introspect:
    post:
      summary: Validate bearer token
      description: |
        Validate a user's bearer token who authorised this token validation
         to the client
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      tags:
        - Tenancy
      parameters:
        - name: token
          type: string
          in: formData
          description: token to be validated; when blank, the response will also include the refreshed bearer token. 
          required: false
      security:
        - OAuth2: []
      responses:
        200:
          description: Authorisation token (Bearer)
          schema:
            type: "object"
          #examples:
          #  application/json: |-
          #    {                
          #       "access_token":"2YotnFZFEjr1zCsicMWpAA",
          #       "token_type":"Bearer",
          #       "expires_in":3600,
          #     }
        400: 
          description: As per RFC authorisation server responds with 400 in case of error
          schema:
            type: "object"
          #examples:
          #  application/json: |-
          #    {
          #      "error":"invalid_request"
          #    }
definitions:
  Token:
    type: object
    properties:
      access_token:
        type: string
        description: The access token value
      token_type:
        type: string
        enum: 
          - Bearer
        description: Type of the token is set to "Bearer"
      expires_in:
        type: integer
        format: int32
        description: The lifetime in seconds of the access token
  Error:
    type: object
    properties:
      error:
        type: string
        enum:
          - invalid_request
          - invalid_client
          - invalid_grant
          - unauthorized_client
          - unsupported_grant_type
      error_description:
        type: string
        description: Human-readable text providing additional information
      error_uri:
        type: string
        description: A URI identifying a human-readable web page with information about the error
